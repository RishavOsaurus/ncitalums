---
import { type CollectionEntry, getCollection } from 'astro:content';

interface Props {
	entry: CollectionEntry<'profiles'>;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
	const profiles = await getCollection('profiles');
	return profiles.map((entry: any) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Fetch similar profiles
const allProfiles = await getCollection('profiles');
const similarProfiles = allProfiles.filter((p) => p.slug !== entry.slug).slice(0, 3); 
//ToDo: Get 3 similar profiles by year or tags or work history
---

<div class="min-h-screen bg-gray-900 flex flex-col items-center py-10">
  <div class="max-w-3xl w-full bg-gray-800 rounded-lg shadow-lg p-6 mb-10">
    <div class="flex flex-col items-center mb-6 relative">
      <img src={entry.data.image.url} alt={entry.data.image.alt} class="w-1/2 h-48 rounded-lg mb-4 object-cover shadow-lg" />
      <div class="absolute inset-0 bg-black opacity-20 rounded-lg"></div>
      <h1 class="text-4xl font-bold text-center text-white relative z-10">{entry.data.name}</h1>
      <p class="text-gray-300 relative z-10">{entry.data.program} ({entry.data.batch})</p>
      <p class="text-gray-400 pb-4 italic relative z-10">{entry.data.slogan}</p>

    <div class="mb-4 text-center">
      <div class="flex flex-wrap justify-center">
        {entry.data.tags.map((tag) => (
          <span class="bg-blue-200 text-blue-800 px-3 py-1 rounded-full text-sm mr-2 mb-2">{tag}</span>
        ))}
      </div>
    </div>
</div>


    <div class="mb-6 text-gray-300">
      <h2 class="text-xl font-semibold text-white">Work History</h2>
      <ul class="list-disc pl-5">
        {entry.data.history.map((item) => (
          <li>
            <strong>{item.year}:</strong> {item.position} at {item.company}
          </li>
        ))}
      </ul>
    </div>

    <div class="mb-6 text-gray-300">
      <h2 class="text-xl font-semibold text-white">About</h2>
      <Content class="prose text-gray-300" />
    </div>

	{entry.data.social && (
		<div class="mb-6 text-center">
		  <h2 class="text-xl font-semibold text-white p-4">Connect with {entry.data.name.split(" ")[0]} On </h2>
		  <div class="flex justify-center space-x-4">
			{entry.data.social.linkedin && (
			  <a href={entry.data.social.linkedin} class="text-blue-400" target="_blank" rel="noopener noreferrer">
				<svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
				  <path d="M21.5 0h-19C1.1 0 0 .9 0 2.5v19C0 23.1.9 24 2.5 24h19c1.6 0 2.5-.9 2.5-2.5v-19C24 .9 23.1 0 21.5 0zm-12 20h-3v-8h3v8zm-1.5-9.2c-.9 0-1.5-.6-1.5-1.4s.6-1.4 1.5-1.4 1.5.6 1.5 1.4-.6 1.4-1.5 1.4zm13.5 9.2h-3v-4.4c0-1.1-.4-1.9-1.4-1.9-.8 0-1.3.5-1.5 1.1-.1.2-.1.5-.1.8v5.4h-3s.1-8.7 0-9.6h3v1.4c.4-.6 1-1.4 2.5-1.4 1.8 0 3.2 1.2 3.2 3.7v6.3z" />
				</svg>
			  </a>
			)}
			{entry.data.social.github && (
			  <a href={entry.data.social.github} class="text-gray-300" target="_blank" rel="noopener noreferrer">
				<svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
				  <path d="M12 0C5.37 0 0 5.37 0 12c0 5.3 3.44 9.8 8.2 11.4.6.1.8-.26.8-.58 0-.29-.01-1.25-.01-2.27-3.34.73-4.04-1.61-4.04-1.61-.55-1.4-1.34-1.77-1.34-1.77-1.1-.75.08-.73.08-.73 1.22.09 1.86 1.26 1.86 1.26 1.09 1.87 2.86 1.33 3.55 1.02.11-.79.43-1.33.78-1.64-2.67-.3-5.47-1.34-5.47-5.94 0-1.32.47-2.4 1.24-3.25-.12-.3-.54-1.54.12-3.21 0 0 1.01-.32 3.3 1.23.96-.27 2.02-.4 3.06-.4 1.04 0 2.1.14 3.06.4 2.29-1.54 3.3-1.23 3.3-1.23.66 1.67.24 2.91.12 3.21.77.85 1.24 1.93 1.24 3.25 0 4.61-2.8 5.64-5.47 5.94.44.38.83 1.14.83 2.3 0 1.66-.01 3.01-.01 3.41 0 .32.2.69.8.57C20.56 21.8 24 17.3 24 12c0-6.63-5.37-12-12-12z" />
				</svg>
			  </a>
			)}
			{entry.data.social.twitter && (
			  <a href={entry.data.social.twitter} class="text-blue-400" target="_blank" rel="noopener noreferrer">
				<svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
				  <path d="M23.635 4.565c-.874.388-1.81.649-2.8.765a4.926 4.926 0 0 0 2.164-2.724 9.879 9.879 0 0 1-3.127 1.195A4.93 4.93 0 0 0 16.568 3c-2.717 0-4.923 2.207-4.923 4.922 0 .387.045.765.128 1.126-4.092-.205-7.728-2.163-10.16-5.144-.427.735-.671 1.585-.671 2.5 0 1.727.88 3.249 2.214 4.143-.813-.026-1.576-.248-2.245-.616v.062c0 2.416 1.72 4.432 4.007 4.895-.418.113-.858.173-1.307.173-.319 0-.629-.031-.933-.086.63 1.955 2.445 3.379 4.596 3.417-1.688 1.32-3.805 2.107-6.097 2.107-.395 0-.785-.023-1.169-.069 2.17 1.387 4.75 2.197 7.511 2.197 9.014 0 13.927-7.461 13.927-13.907 0-.21-.005-.422-.014-.632.954-.688 1.779-1.55 2.43-2.535l-.047-.021z" />
				</svg>
			  </a>
			)}
		  </div>
		</div>
	  )}

  </div>

  <div class="max-w-3xl w-full bg-gray-800 rounded-lg shadow-lg p-6">
    <h2 class="text-xl font-semibold text-white mb-4">Similar Profiles</h2>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
      {similarProfiles.map((profile) => (
        <div class="p-4 bg-gray-700 rounded-lg shadow-md flex flex-col items-center">
          <img src={profile.data.image.url} alt={profile.data.image.alt} class="w-24 h-24 rounded-full mb-2" />
          <h3 class="font-bold text-center text-white">{profile.data.name}</h3>
          <p class="text-gray-300">{profile.data.program} ({profile.data.batch})</p>
          <a href={`/profiles/${profile.slug}`} class="text-blue-400 mt-2">View Profile</a>
        </div>
      ))}
    </div>
	<div class="text-center mt-12">
		<a
		  href="/profiles"
		  class="border border-green-500 hover:bg-green-500 text-white py-3 px-6 transition-all duration-300"
		>
		  View All Alumni
		</a>
	  </div>
  </div>
</div>
